---
# List of pools to define and start.
# Each item should be a dict containing the following items:
# name: The name of the pool.
# type: The type of the pool, currently only 'dir' is supported.
# capacity:  The capacity, in bytes, of the pool.
# path: The absolute path to the pool's backing directory.
# mode: The access mode of the pool.
# owner: The owner of the pool.
# group: The group of the pool.
libvirt_host_pools: []

# List of networks to define and start.
# Each item should be a dict containing the following items:
# name: The name of the network.
# mode: The forwarding mode of the network, currently only 'bridge' is
# supported.
# bridge: The name of the bridge interface for this network.
libvirt_host_networks: []

# Whether to require that Intel Virtualisation Technology (VT) is enabled in
# order to run this role. While this provides better VM performance, it may not
# be available in certain environments.
libvirt_host_require_vt: true

# List of architectures for which to install QEMU system emulators, e.g. x86.
libvirt_host_qemu_emulators: "{{ [] if libvirt_host_require_vt | bool else ['x86'] }}"

# Whether or not to enable UEFI support. In some cases this requires installing
# extra packages.
libvirt_host_enable_efi_support: false

# This determines The directory under /var/run that libvirt uses to store state,
# e.g unix domain sockets, as well as the default name of the PID file. Override
# this if you have a conflict with the default socket e.g it could be in use by the
# nova_libvirt container
libvirt_host_var_prefix: ""

# Where the Unix Domain sockets are stored
libvirt_host_socket_dir: >-
  {%- if libvirt_host_var_prefix -%}
  /var/run/{{ libvirt_host_var_prefix }}
  {%- endif -%}

# Path to PID file which prevents mulitple instances of the daemon from
# spawning
libvirt_host_pid_path: >-
  {%- if libvirt_host_var_prefix -%}
  /var/run/{{ libvirt_host_var_prefix }}.pid
  {%- endif -%}

# Command line arguments passed to libvirtd by the init system when
# libvirtd is started - quotes will be added
libvirt_host_libvirtd_args: >-
  {%- if libvirt_host_pid_path -%}
  -p {{ libvirt_host_pid_path }}
  {%- endif %}

# The libvirt connnection URI
libvirt_host_uri: >-
  {%- if libvirt_host_socket_dir -%}
  qemu+unix:///system?socket={{ libvirt_host_socket_dir }}/libvirt-sock
  {%- endif %}
